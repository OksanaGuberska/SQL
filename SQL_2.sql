-- Внимание! Во всех результирующих выборках должны быть учтены все записи, даже
-- те, которые содержать NULL поля, однако, склейка не должна быть NULL записью!
-- Для этого используйте либо CASE, либо функцию 
-- ISNULL(<выражение>, <значение по умолчанию>) -- Microsoft SQL Server
-- IFNULL(<выражение>, <значение по умолчанию>) -- MySQL
-- Соблюдать это условие достаточно для двух полей BIRTHDAY и UNIV_ID.

-- 1. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала один столбец типа varchar, содержащий последовательность разделенных 
--    символом ';' (точка с запятой) значений столбцов этой таблицы, и при этом 
--    текстовые значения должны отображаться прописными символами (верхний регистр), 
--    то есть быть представленными в следующем виде: 
--    1;КАБАНОВ;ВИТАЛИЙ;550;4;ХАРЬКОВ;01/12/1990;2.
--    ...
--    примечание: в выборку должны попасть студенты из любого города из 5 букв
SELECT CONCAT (ID,';',UPPER (SURNAME),';', UPPER (NAME),';', CAST (STIPEND AS INT),';', UPPER (COURSE),';',UPPER (CITY),';', CONVERT(VARCHAR,BIRTHDAY,101),';', UNIV_ID,'.')
FROM STUDENTS
WHERE LEN (CITY) = 5


-- 2. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде: 
--    В.КАБАНОВ;местожительства-ХАРЬКОВ;родился-01.12.90
--    ...
--    примечание: в выборку должны попасть студенты, фамилия которых содержит вторую
--    букву 'е' и предпоследнюю букву 'и', либо же фамилия заканчивается на 'ц'
SELECT CONCAT (SUBSTRING(NAME, 1,1), ';', SURNAME, ';', 'местожительства-', UPPER (CITY), ';', 'родился-', ISNULL (CONVERT (VARCHAR, BIRTHDAY, 4), 'NO DATA'))
FROM STUDENTS
WHERE SURNAME LIKE '_е%и_' OR SURNAME LIKE '%ц'

-- 3. Составьте запрос для таблицы STUDENT таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    т.цилюрик;местожительства-Херсон; учится на IV курсе
--    ...
--    примечание: курс указать римскими цифрами, отобрать студентов, стипендия 
--    которых кратна 200 

SELECT CONCAT (LOWER(SUBSTRING(NAME, 1,1)), '. ', LOWER(SURNAME), '; ', 'местожительства-', CITY, '; ', 'учится на',
CASE 
WHEN COURSE = 1 THEN ' I курсе'
WHEN COURSE = 2 THEN ' II курсе'
WHEN COURSE = 3 THEN ' III курсе'
WHEN COURSE = 4 THEN ' IV курсе'
ELSE ' V курсе'
END)
FROM STUDENTS
WHERE STIPEND%200=0  --АБО WHERE STIPEND/200-CAST(STIPEND/200 AS INT)=0



SELECT LOWER (SUBSTRING (NAME,1,1)) + '.' + LOWER (SURNAME) + ';' + 'местожительства-' + CITY + ';' + ' учится на ' +
CASE
WHEN COURSE = 4 THEN 'IV' + ' курсе '
END + CONVERT(VARCHAR, STIPEND)
FROM STUDENTS
WHERE COURSE = 4 AND STIPEND%200=0

-- 4. Составьте запрос для таблицы STUDENT таким образом, чтобы выборка 
--    содержала столбец в следующего вида:
--     Нина Федосеева из г.Днепропетровск родилась в 1992 году
--     ...
--     Дмитрий Коваленко из г.Хмельницкий родился в 1993 году
--     ...
--     примечание: для всех городов, в которых более 8 букв

SELECT NAME +' ' + SURNAME + ' из г.' + ' ' + CITY + 
CASE 
WHEN GENDER = 'F'THEN ' родилась в' 
WHEN GENDER = 'M' THEN ' родился в'
END + ' ' + SUBSTRING (CONVERT (VARCHAR, BIRTHDAY, 111), 1,4) + ' году'  
FROM STUDENTS
WHERE LEN (CITY) >8


SELECT CONCAT (NAME, ' ', SURNAME, ' ', 'из г. ', CITY,
CASE
WHEN GENDER ='f' THEN ' родилась в '
WHEN GENDER = 'm' THEN ' родился в '
END, SUBSTRING (CONVERT (VARCHAR, BIRTHDAY, 111), 1,4) + ' году')
FROM STUDENTS
WHERE LEN(CITY)>8


-- 5. Вывести фамилии, имена студентов и величину получаемых ими стипендий, 
--    при этом значения стипендий первокурсников должны быть увеличены на 17.5%

SELECT SURNAME, NAME,
CASE
WHEN COURSE = '1' THEN STIPEND*(100+17.5)/100 --STIPEND*1.175
ELSE STIPEND
END 
FROM STUDENTS


-- 6. Вывести наименования всех учебных заведений и их расстояния 
--    (придумать/нагуглить/взять на глаз) до Киева.
SELECT NAME + ' ' + CITY + 
CASE
WHEN CITY = 'Львов' THEN ' 539 км до Киева'
WHEN CITY = 'Харьков' THEN ' 479 км до Киева'
WHEN CITY = 'Днепр' THEN ' 201 км до Киева'
WHEN CITY = 'Донецк' THEN ' 744 км до Киева'
WHEN CITY = 'Одесса' THEN ' 473 км до Киева'
WHEN CITY = 'Тернополь' THEN ' 419 км до Киева'
WHEN CITY = 'Запорожье' THEN ' 514 км до Киева'
WHEN CITY = 'Белая Церковь' THEN ' 85 км до Киева' 
WHEN CITY = 'Херсон' THEN ' 545 км до Киева' 
ELSE ' '
END 
FROM UNIVERSITIES



-- 7. Вывести все учебные заведения и их две последние цифры рейтинга.
SELECT NAME, RIGHT (RATING, 2) RATING, CITY
FROM UNIVERSITIES 


-- 8. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;Рейтинг относительно ДНТУ(501) +756
--    ...
--    Код-11;КНУСА-г.Киев;рейтинг относительно ДНТУ(501) -18
--    ...
--    примечание: рейтинг вычислить относительно ДНТУшного, а также должен 
--    присутствовать знак (+/-), рейтинг ДНТУ заранее известен = 501

SELECT 'Код-' + CONVERT (VARCHAR, ID) + ';' + NAME + '-г.' + CITY + ';рейтинг относительно ДНТУ(501) ' +
CASE
WHEN RATING - 501 > 0 THEN '+' + CONVERT (VARCHAR, RATING - 501)
ELSE CONVERT (VARCHAR, RATING - 501)
END 
FROM UNIVERSITIES
--АБО 
SELECT CONCAT('Код-', ID, ';', NAME, ';рейтинг относительно ДНТУ(501) ', 
CASE 
WHEN RATING - 501>0 THEN '+'
END, RATING -501)
FROM UNIVERSITIES



-- 9. Составьте запрос для таблицы UNIVERSITY таким образом, чтобы выходная таблица 
--    содержала всего один столбец в следующем виде:
--    Код-1;КПИ-г.Киев;рейтинг состоит из 12 сотен
--    Код-2;КНУ-г.Киев;рейтинг состоит из 6 сотен
--    ...
--    примечание: в рейтинге необходимо указать кол-во сотен
SELECT 'Код-' + CONVERT (VARCHAR, ID) + ';' + NAME + '-г.' + CITY + ';' + 'рейтинг состоит из ' + CAST(RATING / 100 AS VARCHAR) + ' сотен'
FROM UNIVERSITIES

--АБО 

SELECT CONCAT ('Код-', ';', NAME, '-г.', CITY, ';', 'рейтинг состоит из ', RATING/100, ' сотен')
FROM UNIVERSITIES
